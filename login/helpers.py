from django.utils import timezone
from .models import Sesion
from hashlib import sha256
from Crypto.Cipher import AES
import base64

#Segundos antes de que expire una sesión
SESSION_EXPIRATION_TIME = 15

BLOCK_SIZE = 16

# Parámetros de Diffie-Hellman

g = 2

p_hex = "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3" + \
    "CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5" + \
    "AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356" + \
    "208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28F" + \
    "B5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF"

p = int(p_hex, 16)

# LLave pública de bob
N = "00CD2E3FDA9AB5C6A9AEB597DA9EBAB9E4CB95991C7D54C42D4ACEB7197DF33CECECCCFBD40ADBBD57F5B593173D4722C0D440509F" + \
    "F223F4D7E7A6AB2C0C703655ACBFEA06DD42F06D274B2FF6EED1A68B049AD7ED1FE4E84DA4E9786E4E483719F8977309B044AA4E12" + \
    "EF1FB1EEBDF77AA9538470E00B84B3B09CB445D18DA162CDAB054C322296FD815FED935446B2CADF4EDF4D15F1A0FE5B45FE0EB02E" + \
    "54513A1781953AE5BD666F0DD1DB4CA0FA0E5CDA1F47D5E775FCEBB1F633CB3E5E2C23ECA7FA0F671911A1B43E953C6797776B16B6" + \
    "FD2C315E6A7DF92DA1328BB01476E0C22AB4115741D7000085A38544CEA43F63060DDF7A3D64BF5CD7A04EF377"

e = "010001"

PB = (N, e)

# Llave pública de Alice

NA = "00C5C2A55B51764AA28E2B7E650F601CEAE6334BA99771A2F8B0C1085E9EEDAA96D3C040CEC539CA922F0A666562E7A9E3111A348A" + \
     "B41088D9E5B65251F2CAD23A6B31CFC92E90F919DAA5EEA24D05D84D4BD7466A3159353AB85D738C4214EAD0C2CA7F4B3CA5D0AD25" + \
     "10DCF4E0E732557B9C2C14B1E0AFD9DAD263926220ACEA9D10F12180B2BF85937413D87596A34C243A141C1F3360812E80A2320A42" + \
     "4BF1E4FC27ACFC5A64C6BB3BFEE07F401D2FC01AEAE7584CACC0315AA9FFBF51F604516311E261510C2FB0138319224815BB8A81BC" + \
     "9F4D32A268859473F691AC73CFBA8FB16ADD1C6BD7CB39B1A75D91E70B5FDB78200CE46C5FD664887841657E17"

# Devuelve una lista con todas las sesiones cuya timestamp fue hace menos de 5 minutos
def sesiones_activas():
    sesiones = list()
    for sesion in Sesion.objects.all():
        if (timezone.now() - sesion.timestamp).total_seconds() < SESSION_EXPIRATION_TIME:
            sesiones.append(sesion)
    return sesiones


# Devuelve True si hay al menos una sesion activa
def is_logged_in():
    return len(sesiones_activas()) > 0

def get_sesion():
    return sesiones_activas()[0]

# Definir función hash sha 256
def h(m):
    return sha256(m.encode('utf-8')).hexdigest().upper()


# Definir desencripción AES256
def decrypt(C, k, IV):
    cipher = AES.new(bytes.fromhex(k), AES.MODE_CBC, iv=bytes.fromhex(IV))
    return cipher.decrypt(bytes.fromhex(C)).decode('utf-8').rstrip('\x05')
